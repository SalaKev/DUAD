1. string + string = esto une o muestra la union de dos datos alfabeticos, ejemplo nombre y apellido (Kevin + Salazar).
2. string + int = esto da el siguiente error (*TypeError: can only concatenate str (not "int") to str*) y a lo que investigue para entender, es que basicamente no deja o no permite que se sumen un dato alfabetico y otro numerico no matchean, en la clase Alek menciona que esto se puede solucionar, pero se veria mas adelante en el curso. Igual lo unico que se me ocurre por el momento es convirtiendo el int a string.
3. int + string = esto da el siguiente error (*TypeError: unsupported operand type(s) for +: 'int' and 'str’*) al investigar encontre basicamente lo mismo solo que en este caso lo detallan mas, que es la suma entre dos o mas valores que no son del mismo tipo de dato, para hacerle fix es cambiar a que los datos sean del mismo tipo.
4. list + list = esto une dos listas que estan aparte y las muestra como una sola, basicamente di las suma, lo intente con solo ints y tambien sumando una lista que contenia solo ints y la otra con strings y tambien las une. Incluso de la suma de la lista podemos pedir que solo muestre un dato de toda la lista sin problema.
5. string + list = esto da el siguiente error (*TypeError: can only concatenate str (not "list") to str*) investigue y encontre esta explicacion: The error message TypeError: can only concatenate str to the str indicates that **an attempt was made to concatenate a string with the NoneType object**. In Python, NoneType represents the type of the None object which is often used to signify the absence of the value. No entendi porque le llaman **NoneType object.**
Pero si primero pongo el list y luego el string da este error (*TypeError: can only concatenate list (not "str") to list*), no encontre explicacion exacta pero supongo que es lo mismo relacionado a que son diferente tipos de datos y no matchean.
6. float + int = se suman normalmente como si fueran dos int, solo que uno tiene decimales y otro no. Pasa igual en viceversa.
7. bool + bool = Si son dos True da un 2, si es un True + un False da 1 y si ambos son false dan 0, esto va muy relacionado a codigo binario. Por eso los resultados